"""
     Реализуйте метод, принимающий в качестве аргумента целочисленный массив и некоторое значение.
     Метод ищет в массиве заданное значение и возвращает его индекс. При этом, например:
     1. если длина массива меньше некоторого заданного минимума, метод возвращает -1, в качестве кода ошибки. +
     2. если искомый элемент не найден, метод вернет -2 в качестве кода ошибки. +
     3. если вместо массива пришел null, метод вернет -3 +
     4. придумайте свои варианты исключительных ситуаций и верните соответствующие коды ошибок.
     Напишите метод, в котором реализуйте взаимодействие с пользователем.
     То есть, этот метод запросит искомое число у пользователя, вызовет первый,
     обработает возвращенное значение и покажет читаемый результат пользователю.
     Например, если вернулся -2, пользователю выведется сообщение: “Искомый элемент не найден”.
"""

def task(coll:list[int], sign:int,limit:int) -> None:
    if coll is None:
        return -3
    if len(coll) < limit:
        return -1
    try:
        return coll.index(sign)
    except ValueError:
        return -2

def user_friendly_output(error_code:int):
    match error_code:
        case -3:
             return "ОШИБКА. Массив не приложен."
        case -2:
            return "ОШИБКА. Массив не содержит запрос."
        case -1:
            return "ОШИБКА. Размер массива меньше эстимейта."
        case _:
            return f"УСПЕХ. Индекс позиции: {error_code}."
        

def main():
    a= []
    b = [None,2]*800
    limit_=100
    query=[1,2]
    t1 = task(coll=a,sign=query[0],limit=limit_)
    print(user_friendly_output(t1))
    t2 = task(coll=b,sign=query[1],limit=limit_)
    print(user_friendly_output(t2))


main()